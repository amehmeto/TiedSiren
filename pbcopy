diff --git a/core/block-session/block-session.ts b/core/block-session/block-session.ts
index f2e727e..6ddd854 100644
--- a/core/block-session/block-session.ts
+++ b/core/block-session/block-session.ts
@@ -1,4 +1,5 @@
 export type BlockSession = {
+  id: string
   name: string
   minutesLeft: number
   blocklists: number
diff --git a/infra/current-session-repository/fake-data.block-session.repository.ts b/infra/current-session-repository/fake-data.block-session.repository.ts
index b801f98..f5dcbe1 100644
--- a/infra/current-session-repository/fake-data.block-session.repository.ts
+++ b/infra/current-session-repository/fake-data.block-session.repository.ts
@@ -1,14 +1,31 @@
 import { BlockSession } from '../../core/block-session/block-session'
 import { BlockSessionRepository } from '../../core/block-session/ports/block-session.repository'
+import uuid from 'react-native-uuid'
 
-export class FakeDataCurrentSessionRepository
-  implements BlockSessionRepository
-{
+export class FakeDataBlockSessionRepository implements BlockSessionRepository {
   getCurrentSessions(): Promise<BlockSession[]> {
     return Promise.resolve([
-      { name: 'Sleeping time', minutesLeft: 22, blocklists: 2, devices: 1 },
-      { name: 'Necessary Evils', minutesLeft: 220, blocklists: 6, devices: 5 },
-      { name: 'Test time', minutesLeft: 34, blocklists: 2, devices: 4 },
+      {
+        id: String(uuid.v4()),
+        name: 'Sleeping time',
+        minutesLeft: 22,
+        blocklists: 2,
+        devices: 1,
+      },
+      {
+        id: String(uuid.v4()),
+        name: 'Necessary Evils',
+        minutesLeft: 220,
+        blocklists: 6,
+        devices: 5,
+      },
+      {
+        id: String(uuid.v4()),
+        name: 'Test time',
+        minutesLeft: 34,
+        blocklists: 2,
+        devices: 4,
+      },
     ])
   }
 }
diff --git a/react-view/dependencies.ts b/react-view/dependencies.ts
index a4d6f6e..ea0b6ed 100644
--- a/react-view/dependencies.ts
+++ b/react-view/dependencies.ts
@@ -1,9 +1,9 @@
 import { FakeDataInstalledAppsRepository } from '../infra/installed-apps-repository/fake-data.installed-apps.repository'
 import { InstalledAppRepository } from '../core/installed-app/ports/installed-app.repository'
-import { FakeDataCurrentSessionRepository } from '../infra/current-session-repository/fake-data.current-session.repository'
+import { FakeDataBlockSessionRepository } from '../infra/current-session-repository/fake-data.block-session.repository'
 import { BlockSessionRepository } from '../core/block-session/ports/block-session.repository'
 
 export const installedAppsRepository: InstalledAppRepository =
   new FakeDataInstalledAppsRepository()
 export const blockSessionRepository: BlockSessionRepository =
-  new FakeDataCurrentSessionRepository()
+  new FakeDataBlockSessionRepository()
diff --git a/react-view/design-system/components/TiedSButton.tsx b/react-view/design-system/components/TiedSButton.tsx
index ef8e0c7..786645f 100644
--- a/react-view/design-system/components/TiedSButton.tsx
+++ b/react-view/design-system/components/TiedSButton.tsx
@@ -1,12 +1,23 @@
-import { Platform, Pressable, StyleSheet, Text } from 'react-native'
+import {
+  Platform,
+  Pressable,
+  StyleProp,
+  StyleSheet,
+  Text,
+  ViewStyle,
+} from 'react-native'
 import React from 'react'
 import { T } from '../theme'
 
 export function TiedSButton(
-  props: Readonly<{ onPress: () => void; text: string }>,
+  props: Readonly<{
+    onPress: () => void
+    text: string
+    style?: StyleProp<ViewStyle>
+  }>,
 ) {
   return (
-    <Pressable style={styles.container} onPress={props.onPress}>
+    <Pressable style={[styles.container, props.style]} onPress={props.onPress}>
       <Text style={styles.buttonText}>{props.text}</Text>
     </Pressable>
   )
diff --git a/react-view/design-system/theme.ts b/react-view/design-system/theme.ts
index 35bc23e..7805127 100644
--- a/react-view/design-system/theme.ts
+++ b/react-view/design-system/theme.ts
@@ -29,6 +29,7 @@ export const T = {
   },
   borderRadius: {
     roundedSmall: 5,
+    extraRounded: 20,
     fullRound: 100,
   },
   shadow: {
diff --git a/react-view/navigators/BottomTabNavigator.tsx b/react-view/navigators/BottomTabNavigator.tsx
index 61906ed..a70b817 100644
--- a/react-view/navigators/BottomTabNavigator.tsx
+++ b/react-view/navigators/BottomTabNavigator.tsx
@@ -27,8 +27,8 @@ export function BottomTabNavigator() {
     >
       <Tab.Screen
         name={TabScreens.HOME}
-        component={HomeStackNavigator}
-        // component={CreateBlockSessionScreen}
+        // component={HomeStackNavigator}
+        component={CreateBlockSessionScreen}
         options={{
           tabBarIcon: ({ color, size }) => (
             <Entypo name="light-up" size={size} color={color} />
diff --git a/react-view/screens/Home/CreateBlockSessionScreen.tsx b/react-view/screens/Home/CreateBlockSessionScreen.tsx
index 0cc770f..868edf8 100644
--- a/react-view/screens/Home/CreateBlockSessionScreen.tsx
+++ b/react-view/screens/Home/CreateBlockSessionScreen.tsx
@@ -9,7 +9,7 @@ import { TabScreens } from '../../navigators/screen-lists/TabScreens'
 import { Pressable, StyleSheet, Text, TextInput, View } from 'react-native'
 import { Formik } from 'formik'
 import { T } from '../../design-system/theme'
-import { SelectFromList } from './SelectFromList'
+import { SelectFromListModal } from './SelectFromListModal'
 
 type HomeScreenProps = {
   navigation: NativeStackNavigationProp<ScreenList, TabScreens.HOME>
@@ -18,35 +18,26 @@ type HomeScreenProps = {
 export function CreateBlockSessionScreen({
   navigation,
 }: Readonly<HomeScreenProps>) {
-  const sessionOptions = {
-    blocklists: ['Distractions'],
-    devices: ['Huawei P20, Lenovo Tab'],
+  const session = {
+    name: 'Working time',
+    blocklists: ['Distractions', 'Necessary evils'],
+    devices: ['Huawei P20', 'Lenovo Tab'],
     start: '19:00',
     end: '21:00',
-    name: 'Working time',
   }
-  const [modalVisible, setModalVisible] = useState(false)
+  const [isBlocklists, setIsBlocklists] = useState<boolean>(false)
+  const [isDeviceList, setIsDeviceList] = useState<boolean>(false)
 
   return (
     <TiedSLinearBackground>
-      <SelectFromList
-        visible={modalVisible}
-        onRequestClose={() => {
-          setModalVisible(!modalVisible)
-        }}
-        onPress={() => {
-          setModalVisible(!modalVisible)
-        }}
-      />
-
       <Formik
-        initialValues={sessionOptions}
+        initialValues={session}
         onSubmit={(values) => console.log(values)}
       >
         {({ handleChange, handleBlur, handleSubmit, values }) => (
           <View>
             <TiedSBlurView style={styles.blockSession}>
-              <View style={styles.container}>
+              <View style={styles.param}>
                 <Text style={styles.label}>Name</Text>
                 <TextInput
                   style={styles.option}
@@ -56,31 +47,35 @@ export function CreateBlockSessionScreen({
                 />
               </View>
 
-              <View style={styles.container}>
+              <View style={styles.param}>
                 <Text style={styles.label}>Blocklists</Text>
-                <Pressable
-                  onPress={() => {
-                    setModalVisible(true)
-                  }}
-                >
-                  <TextInput
+                <Pressable onPress={() => setIsBlocklists(true)}>
+                  <Text
                     style={styles.option}
-                    onChangeText={handleChange('blocklists')}
+                    /*  onChangeText={handleChange('blocklists')}
                     onBlur={handleBlur('blocklists')}
-                    value={values.blocklists.join(', ')}
-                  />
+                    value={values}*/
+                  >
+                    {session.blocklists.join(', ')}
+                  </Text>
                 </Pressable>
               </View>
-              <View style={styles.container}>
+
+              <View style={styles.param}>
                 <Text style={styles.label}>Devices</Text>
-                <TextInput
-                  style={styles.option}
-                  onChangeText={handleChange('devices')}
+                <Pressable onPress={() => setIsDeviceList(true)}>
+                  <Text
+                    style={styles.option}
+                    /* onChangeText={handleChange('devices')}
                   onBlur={handleBlur('devices')}
-                  value={values.devices.join(', ')}
-                />
+                  value={values.devices.join(', ')} */
+                  >
+                    {session.devices.join(', ')}
+                  </Text>
+                </Pressable>
               </View>
-              <View style={styles.container}>
+
+              <View style={styles.param}>
                 <Text style={styles.label}>Starts</Text>
                 <TextInput
                   style={styles.option}
@@ -89,7 +84,7 @@ export function CreateBlockSessionScreen({
                   value={values.start}
                 />
               </View>
-              <View style={styles.container}>
+              <View style={styles.param}>
                 <Text style={styles.label}>Ends</Text>
                 <TextInput
                   style={styles.option}
@@ -109,6 +104,19 @@ export function CreateBlockSessionScreen({
           </View>
         )}
       </Formik>
+
+      <SelectFromListModal
+        visible={isBlocklists}
+        list={session.blocklists}
+        onRequestClose={() => setIsBlocklists(!isBlocklists)}
+        onPress={() => setIsBlocklists(!isBlocklists)}
+      />
+      <SelectFromListModal
+        visible={isDeviceList}
+        list={session.devices}
+        onRequestClose={() => setIsDeviceList(!isDeviceList)}
+        onPress={() => setIsDeviceList(!isDeviceList)}
+      />
     </TiedSLinearBackground>
   )
 }
@@ -118,7 +126,7 @@ const styles = StyleSheet.create({
     flexDirection: 'column',
     alignItems: 'stretch',
   },
-  container: {
+  param: {
     flexDirection: 'row',
     justifyContent: 'space-between',
     paddingTop: T.spacing.medium,
diff --git a/react-view/screens/Home/SelectFromListModal.tsx b/react-view/screens/Home/SelectFromListModal.tsx
index df5628c..4f9a014 100644
--- a/react-view/screens/Home/SelectFromListModal.tsx
+++ b/react-view/screens/Home/SelectFromListModal.tsx
@@ -4,7 +4,7 @@ import React from 'react'
 import { TiedSButton } from '../../design-system/components/TiedSButton'
 import { TiedSModal } from '../../design-system/components/TiedSModal'
 
-export function SelectFromList(
+export function SelectFromListModal(
   props: Readonly<{
     visible: boolean
     list: string[]
